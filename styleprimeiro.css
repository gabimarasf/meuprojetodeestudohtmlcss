* {
    margin:0;
    box-sizing: border-box;
}

main {
    padding-top: 4rem;
}

:root {
    font-size: 62,5%; 
    /* o root é uma pseudoclasse, e o 62,5% no font-size significa que o tamanho padrão de texto para a página, 16px, é fracionado para 62,5% de seu tamanho, sendo 10px. Sendo assim, essa página possui mais acessibilidade e é mais responsiva à diversos dispositivos. A porcentagem NA FONTE significa um aumento/diminuição no valor padrão de 16 px. Ao mencionar tamanhos de fonte para outros elementos, menciona (x vezes)rem, i.e. 2.5rem é 2,5x o valor de 10px estabelecido no 'root'. */
} 

h2 {
    color: #3cff00;
    /* font-size: 4.3rem; */
    /* font-weight:100; */
    background-color: #587255;
    text-transform:lowercase;
    text-align:center;
    /* font-family: 'Courier New', Courier, monospace; */
}

h3 {
    text-decoration: dotted;
    font-family: 'Courier Prime', Courier, monospace;
    /* essa é uma fonte adicionada do Google Fonts. O código dela pode ser encontrado ao adicionar a fonte no site, e fica na 'head' do código de html dessa pasta. */
}

[data-anchor="products"] {
    background: #3cff00;
    color: purple;
    border: none;
    font-size: 2.8rem;
    padding: 0.6rem 2.4rem;
    cursor: pointer;
    margin: auto;
    width: 80%;
    text-align: center;
    text-decoration: none;
    transition: all .2s ease-in-out, background-color 1s ease-in-out;

    display: block;
    
    /* opacity: .5;
    visibility: hidden; */


}

[data-anchor="products"]:hover {
    background-color: aqua;
    color: red;
    transform: scale(1.5);
}


[data-text="T1"] {
    color: red;
}

p {
    text-align: justify;
    margin: 10px;
    text-indent: 20px;
    font-family: 'Courier Prime', Courier, monospace;
}

[data-anchor="meet"] {
    background: #3cff00;
    color: purple;
    border: none;
    font-size: 2.8rem;
    padding: 0.6rem 2.4rem;
    cursor: pointer;
    margin: auto;
    width: 80%;
    text-align: center;
    text-decoration: none;
    /* transition: all .2s ease-in-out, background-color 1s ease-in-out; */
    animation: pulse 3s infinite;
    animation-direction: alternate; /*no lugar de inserir o 50% com o valor total e colocar 0 e 100 com valores iguais, inserir animation-direction*/
    transform: scale(1);

    display: block;
}

@keyframes pulse /*existe o load também, que ajuda a criar aquelas animações de bolinha rodando carregando*/ {
    0%{
        transform: scale(1);
        opacity: 1;
    }
    /* 50% {
        transform: scale(1.35);
        opacity: .6;
    } */
    100% {
        /* transform: scale(1);
        opacity: 1; */
        transform: scale(1.35);
        opacity: .6;
    }
}

.bg {
    background-color:#f7f3ba;
    width: 100vw;
    height: 100vh;
    background-image: url('https://images.unsplash.com/photo-1682687220801-eef408f95d71?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxfHx8ZW58MHx8fHx8');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
}

table, td, th {
    border:1px solid violet;
}

table thead tr:first-child {
    background-color:#f7f3ba;
    /* pseudoclasse com o first-child implica o cabeçalho da tabela somente */
}

table tbody tr:nth-child(2n + 2) {
    background-color:rgb(184, 204, 199);
    /* nth-child(2n + 2) alterna as cores das linhas na tabela */
}

table {
    font-size: 2.4rem;
    border-collapse: collapse;
    /* separate significa borda grossa padrão, collapse significa borda final padrão excel */
}

nav.menu /*procura um elemento nav cuja classe é menu*/ {
    position: fixed;
    background-color: azure;
    width: 100%;
    height: 3rem; /*aliada a padding-top do 'main' com dimensões exatamente iguais, o menu não fica por cima da imagem de fundo*/
    z-index: 1; /*informa que ele tem prioridade em cima das position:relatives da página, o que significa que fica por cima*/

}

.contact-list h2 {
    top:3rem;
    position: sticky; /*faz permanecer no comecinho até a próxima, somente dentro dessa section*/
    background-color: lightcoral;
}


.boxes {
    /* height: calc(100vh - 4rem); */
    height: calc(100vh);
    position: relative;

    display: flex;
    flex-wrap: wrap; /* a melhor forma de posicionar elementos seguindo um fluxo de tela é com 'flex' - display:flex, flex-wrap, flex:% ----- nowrap significa overflow da linha*/
    flex-direction: column; /* display em colunas com column, column-reverse inverte a sequência de caixas, row-reverse inverte direção em linha também, mas row é o padrão*/
    /* flex-flow: row wrap (significa a mesma coisa que colocar os 2 elementos acima, meio que a junção deles), sintaxe mais curta*/
    /* justify-items: center; */
    /* align-items: center; */
    justify-content:space-around;
    align-content: center;
    gap: 2rem 5rem; /*espaça os elementos no display da página, não as caixas de maneira igual, para isso é melhor colocar um padding*/

}

.box + span {
    display:none;
}

.box {
    /*flex: 20%;*/
    min-height:10rem;
    min-width: 14rem;
    /* margin: 1.5rem; */
    padding: 1.5rem;
    /* importante colocar o padding e o border-box juntos para evitar que o padding atrapalhe na estilização, e mantenha o tamanho da caixa */
    background-color: #587255;
    border: 10px solid #555;
    color: white;
    display: inline-block;
    font-size: 4rem;
    /* inline não se comportam bem com dimensões bem definidas; block empurra o elemento para a linha abaixo e none retira a caixa inteira da página,  'inline-block' é o recomendado;
    margin faz recuo ao redor do elemento de maneira igual, já o padding atua no interior do elemento (mas o padding pode aumentar o tamanho da caixa */
    border-radius:0.4rem;
    /* position: relative; */
    /* flex: 1; se algum elemento tiver um flex maior, sobrando espaço, ele vai engolir esse espaço até quando puder */
    /* flex-basis: calc(33,33% - 4rem); */
}

.box:nth-child(1) { 
    /* float: right; não recomendado, mas muda a posição do elemento desejado também
    /*position: absolute;
    /* absolute, caixinha fica atrás das outras e obrigatoriamente não ocupa espaço em tela, dentro de uma linha, desrespeitando o fluxo normal do navegador (para evitar isso, eu devo criar uma regra para a div-mãe 'boxes', que delimita sua position como 'relative')
    top: 0px;
    left: 30px;
    /* essas opções delimitam a posição da caixa, que pode ficar em qualquer lugar da página, considerando o começo da página como padrão 
    /* 'static' não permite que top, left, right, bottom sejam setadas */
}

/* .box:nth-child(2) {
    position: fixed;
    /* útil para fazer uma barra de menu, nav, que permaneça no site sempre fixa 
    top: 15px;
    right: 30px;
} */


.box:nth-child(2) {
    /* display: none; */
    order: 1; /* interessante para inserir algum elemento diretamente em outra parte da construção de elementos*/
}

img {
    height: 10rem;
    width: 9rem;
    object-fit: cover;
}


/*responsividade!!!*/
@media screen and (min-width: 1024px) {
    .br {
        height: 50vh;
    }
}


 @media screen and (min-width:768px) and (max-width: 1023px) /*posso colocar quantas regras eu quiser para modificar as existências em dispositivos diferentes*/ {
    .bg {
        height: 80vh; 
    }
} /* controle fino para aspectos diferentes e dispositivos diferentes*/

@media print {
    .bg {
        display:none;
    }
}